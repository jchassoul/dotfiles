" Disable built-in plugins
let g:loaded_python_provider=0
let g:loaded_ruby_provider=0
let g:loaded_node_provider=0
let g:loaded_perl_provider=0
let g:loaded_getscript=0
let g:loaded_getscriptPlugin=0
let g:loaded_gzip=0
let g:loaded_netrw=0
let g:loaded_netrwFileHandlers=0
let g:loaded_netrwPlugin=0
let g:loaded_netrwSettings=0
let g:loaded_rrhelper=0
let g:loaded_tar=0
let g:loaded_tarPlugin=0
let g:loaded_tohtml=0
let g:loaded_tutor=0
let g:loaded_vimball=0
let g:loaded_vimballPlugin=0
let g:loaded_zip=0
let g:loaded_zipPlugin=0

" Ps pss psss, psssss!
let g:python3_host_prog = '/usr/bin/python3'

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
            \| PlugInstall --sync | source $MYVIMRC
            \| endif

syntax on

filetype plugin indent on

set nocompatible
set scrolloff=8
set mouse=a
set noerrorbells
set clipboard=unnamedplus
set encoding=utf-8
set number relativenumber
set nohlsearch
set hidden
set wildmode=longest,list,full
set splitbelow splitright
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set nowrap
set nofoldenable
set ignorecase
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set switchbuf=usetab,newtab
set noshowmode
if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
endif
set guifont=Inconsolata\ Nerd\ Font\ 12
set t_Co=256
set t_ut=
set signcolumn=yes
set updatetime=50
set shortmess=I
set completeopt=longest,menuone
set omnifunc=syntaxcomplete#Complete
set wildmenu
set lazyredraw
set showmatch
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tar.*
set laststatus=2
"set cursorline
"set colorcolumn=88

"highligh ColorColum ctermbg=0 guibg=lightgrey

" For conceal markers.
if has('conceal')
    set conceallevel=2 concealcursor=niv
endif

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-dispatch'
Plug 'mhinz/vim-startify'
Plug 'sheerun/vim-polyglot'
Plug 'farmergreg/vim-lastplace'
Plug 'easymotion/vim-easymotion'
Plug 'machakann/vim-sandwich'
Plug 'machakann/vim-highlightedyank'
Plug 'junegunn/goyo.vim', {'for':['markdown','vimwiki']}
Plug 'junegunn/limelight.vim', {'for':['markdown','vimwiki']}
Plug 'Shougo/denite.nvim'
Plug 'justinmk/vim-dirvish'
Plug 'kristijanhusak/vim-dirvish-git'
Plug 'davisdude/vim-love-docs'
Plug 'vim-pandoc/vim-pandoc', {'for':['markdown','vimwiki']}
Plug 'vim-pandoc/vim-pandoc-syntax', {'for':['markdown','vimwiki']}
Plug 'baskerville/vim-sxhkdrc'
Plug 'jpalardy/vim-slime'
Plug 'christoomey/vim-tmux-navigator'
Plug 'jiangmiao/auto-pairs'
Plug 'mbbill/undotree'
Plug 'jchassoul/onehalf', {'rtp':'vim'}
Plug 'luochen1990/rainbow', {'for':['python','lua','erlang']}
Plug 'ackyshake/VimCompletesMe'
Plug 'Shougo/deoplete.nvim', {'for':['python','lua','erlang']}
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'lighttiger2505/deoplete-vim-lsp', {'for':['python','lua','erlang']}
Plug 'ludovicchabant/vim-gutentags'
Plug 'SirVer/ultisnips', {'for':['python','lua','erlang']}
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'thomasfaingnaert/vim-lsp-snippets', {'for':['python','lua','erlang']}
Plug 'thomasfaingnaert/vim-lsp-ultisnips', {'for':['python','lua','erlang']}
Plug 'dense-analysis/ale', {'for':['python','lua','erlang']}
Plug 'sbdchd/neoformat'
Plug 'ryanoasis/vim-devicons'
Plug 'itchyny/lightline.vim'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'vimwiki/vimwiki'
Plug 'mattn/calendar-vim'
Plug 'chrisbra/Colorizer'
Plug 'Yggdroot/indentLine'
Plug 'vim-test/vim-test', {'for':['python','lua','erlang']}
Plug 'fisadev/vim-isort', {'for':'python'}
Plug 'mattn/vim-lsp-settings'

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

colorscheme onehalfdark

" Enable transparent background
highlight Normal guibg=NONE

let g:rainbow_active = 1

let g:AutoPairsMapCR = 0

" Disable continuation of comment permanently
autocmd FileType * set formatoptions-=cro

autocmd InsertEnter * norm zz

" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL
