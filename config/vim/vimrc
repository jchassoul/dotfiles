" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

syntax on

filetype plugin indent on

set nocompatible
set mouse=a
set noerrorbells
set clipboard=unnamedplus
set encoding=utf-8
set number relativenumber
set nohlsearch
set hidden
set wildmode=longest,list,full
set splitbelow splitright
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set nowrap
set ignorecase
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set incsearch
set switchbuf=usetab,newtab
set noshowmode
set termguicolors
set t_Co=256
set t_ut=
set signcolumn=yes
set updatetime=50
set shortmess=I
set completeopt=longest,menuone
set omnifunc=syntaxcomplete#Complete
set wildmenu
set lazyredraw
set showmatch
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tar.*
set laststatus=2
set cursorline
set colorcolumn=88

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

highligh ColorColum ctermbg=0 guibg=lightgrey

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-repeat'
Plug 'vim-python/python-syntax', {'for':'python'}
Plug 'vim-utils/vim-man'
Plug 'davisdude/vim-love-docs', {'for':'lua'}
Plug 'vim-pandoc/vim-pandoc',
Plug 'vim-pandoc/vim-pandoc-syntax', {'for':['markdown','vimwiki']}
Plug 'jpalardy/vim-slime'
Plug 'christoomey/vim-tmux-navigator'
Plug 'jiangmiao/auto-pairs'
Plug 'jremmen/vim-ripgrep'
Plug 'mbbill/undotree'
Plug 'sonph/onehalf', {'rtp':'vim'}
Plug 'ackyshake/VimCompletesMe'
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'xolox/vim-misc', {'for':'lua'}
Plug 'xolox/vim-lua-ftplugin', {'for':'lua'}
Plug 'lighttiger2505/deoplete-vim-lsp'
Plug 'Shougo/denite.nvim'
Plug 'SirVer/ultisnips'
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'thomasfaingnaert/vim-lsp-snippets'
Plug 'thomasfaingnaert/vim-lsp-ultisnips'
Plug 'dense-analysis/ale'
Plug 'sbdchd/neoformat'
Plug 'ryanoasis/vim-devicons'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'
Plug 'vimwiki/vimwiki'
Plug 'mattn/calendar-vim'
Plug 'chrisbra/Colorizer'
Plug 'sheerun/vim-polyglot'
Plug 'vim-erlang/vim-erlang-omnicomplete', {'for':'erlang'}
Plug 'edkolev/erlang-motions.vim', {'for':'erlang'}
Plug 'Yggdroot/indentLine'
Plug 'preservim/tagbar'
Plug 'vim-test/vim-test', {'for':['python','lua','erlang']}
Plug 'skywind3000/asyncrun.vim'
Plug 'skywind3000/asynctasks.vim'
Plug 'fisadev/vim-isort', {'for':'python'}
Plug 'mattn/vim-lsp-settings'

" List ends here. Plugins become visible to Vim after this call.

call plug#end()

let g:AutoPairsMapCR=0

let g:indentLine_setColors = 0

nnoremap <F2> :<C-u>Denite file/rec -start-filter<CR>
nnoremap <leader>w :<C-u>Denite buffer<CR>
nnoremap <leader>8 :<C-u>DeniteCursorWord grep:.<CR>
nnoremap <leader>/ :<C-u>Denite -start-filter grep:::!<CR>
nnoremap <leader><Space>/ :<C-u>DeniteBufferDir -start-filter grep:::!<CR>
nnoremap <leader>d :<C-u>DeniteBufferDir file/rec -start-filter<CR>
nnoremap <leader>r :<C-u>Denite -resume -cursor-pos=+1<CR>
nnoremap <leader><C-r> :<C-u>Denite register:.<CR>

map <leader>- :split<CR>
map <leader>\ :vsplit<CR>
map <leader>t :tabnew<CR>
map <leader>j :SlimeSend1 ipython --matplotlib<CR>
nnoremap <Leader>jq :SlimeSend1 exit<CR>
map <leader>l :ColorToggle<CR>
map <leader>q :q<CR>
map <leader>m :setlocal formatoptions-=cro<CR>
map <leader>M :setlocal formatoptions=cro<CR>
map <leader>s :setlocal spell! spelllang=en_us<CR>
map <leader>d :setlocal autoindent<CR>>
map <leader>D :setlocal noautoindent<CR>

nnoremap <silent> <C-Left> :vertical resize +5<CR>
nnoremap <silent> <C-Right> :vertical resize -5<CR>
nnoremap <silent> <C-Up> :resize +5<CR>
nnoremap <silent> <C-Down> :resize -5<CR>

nnoremap <leader>/ :Rg<SPACE>

nnoremap R :%s//gI<Left><Left><Left>

nnoremap <F4> :UndotreeToggle<CR>

noremap <silent><F5> :AsyncTask file-run<cr>

nmap <F6> :TagbarToggle<CR>

nmap <F7> :CalendarT<CR>

noremap <silent><F8> :AsyncTask file-build<cr>

nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

autocmd InsertEnter * norm zz

autocmd BufWritePre * %s/\s\+$//e

" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL
