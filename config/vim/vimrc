execute pathogen#infect()

set nocompatible
syntax on
filetype plugin indent on

set mouse=a
set noerrorbells
set encoding=utf-8
set number relativenumber
set nohlsearch
set hidden
set scrolloff=8
set wildmode=longest,list,full
set splitbelow splitright
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set runtimepath^=~/.vim/bundle/ctrlp.vim
set smartindent
set nowrap
set ignorecase
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile

set incsearch
set noshowmode

set completeopt=menuone,noinsert,noselect

set colorcolumn=80
set signcolumn=yes

set updatetime=50
set shortmess+=c

set termguicolors

set t_Co=256
set t_ut=

colorscheme codedark

highligh ColorColum ctermbg=0 guibg=lightgrey

let g:indentLine_setColors = 0

let g:airline#extensions#wordcount#enabled = 1
let g:airline_theme='monochrome'
let g:minimap_highlight='Comment'

function! ToggleNetrw()
        let i = bufnr("$")
        let wasOpen = 0
        while (i >= 1)
            if (getbufvar(i, "&filetype") == "netrw")
                silent exe "bwipeout " . i
                let wasOpen = 1
            endif
            let i-=1
        endwhile
    if !wasOpen
        silent Lexplore
    endif
endfunction

map <F3> :call ToggleNetrw() <CR>

set switchbuf=usetab,newtab

nnoremap <F8> :sbnext<CR>

let g:netrw_banner=0        " disable annoying banner
let g:netrw_winsize = 20    " width in percent
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide='\(^\|\s\s\)\zs\.\S\+'

autocmd FileType netrw set nolist

let g:vimwiki_list = [{'path': '~/vault/vimwiki/',
                      \ 'syntax': 'markdown', 'ext': '.md'}]

let g:coc_disable_startup_warning = 1

map <leader>- :split<CR>
map <leader>\ :vsplit<CR>
map <leader>t :tabnew<CR>
map <leader>c :ColorToggle<CR>
map <leader>s :setlocal spell! spelllang=en_us<CR>
map <leader>v <C-w>t<C-w>H
map <leader>h <C-w>t<C-w>K

" Erlang
autocmd BufRead,BufNewFile *.erl,*.es.*.hrl,*.xrl,*.config setlocal expandtab noautoindent
au BufNewFile,BufRead *.erl,*.es,*.hrl,*.xrl,*.config setf erlang

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_lua_checkers = ["luacheck"]
let g:syntastic_lua_luacheck_args = "--no-unused-args"
let g:syntastic_erlang_checkers=['syntaxerl']

" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL
